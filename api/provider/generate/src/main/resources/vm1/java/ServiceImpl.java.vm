package ${package}.service.impl;

import java.util.List;
import java.util.HashMap;
import java.util.Map;

import com.yrsoft.utils.JsonResult;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import com.yrsoft.support.Convert;
import ${package}.entity.${className};
import ${package}.dao.${className}Dao;
import ${package}.service.${className}Service;



/**
 * ${tableComment} 服务层实现
 * 
 * @author ${author}
 * @date ${datetime}
 */
@Service
public class ${className}ServiceImpl implements ${className}Service
{
    @Autowired
    private ${className}Dao ${classname}Dao;

	/**
     * 查询${tableComment}信息
     * 
     * @param ${primaryKey.attrname} ${tableComment}ID
     * @return ${tableComment}信息
     */
    @Override
	public JsonResult get${className}ById(${primaryKey.attrType} ${primaryKey.attrname})
	{
		${className} ${classname} = ${classname}Dao.select${className}ById(${primaryKey.attrname});
        if ( null == ${classname} ) {
			return JsonResult.error(201,"暂无数据");
        }
	    return JsonResult.success(${classname});
	}

    /**
     * 查询${tableComment}列表
     * @param  page
     * @param  limit
     * @param ${classname} ${tableComment}信息
     * @return ${tableComment}集合
     */
    @Override
    public JsonResult list(Integer page,Integer limit,${className} ${classname})
    {
        //开启分页
        PageHelper.startPage(page,limit);

        //获取数据
        List<${className}> lists =  ${classname}Dao.select${className}List(${classname});
        if (null == lists || lists.isEmpty()){
            return JsonResult.error(201,"暂无数据");
        }

        PageInfo<${className}> pageInfo = new PageInfo<>(lists);

        return JsonResult.createJsonResponse(pageInfo);
    }
	
    /**
     * 新增${tableComment}
     * 
     * @param ${classname} ${tableComment}信息
     * @return 结果
     */
	@Override
	public JsonResult add(${className} ${classname})
	{

        int result = ${classname}Dao.insert${className}(${classname});
        if (result == 0) {
            return JsonResult.error(201,"添加失败");
        }
        return JsonResult.success(200,"添加成功");
	}
	
	/**
     * 修改${tableComment}
     * 
     * @param ${classname} ${tableComment}信息
     * @return 结果
     */
	@Override
	public JsonResult edit(${className} ${classname})
	{
        int result = ${classname}Dao.update${className}(${classname});
        if (result == 0) {
            return JsonResult.error(201,"更新失败");
        }
        return JsonResult.success(200,"更新成功");
	}

    /**
     * 删除${tableComment}对象
     *
     * @param ids 需要删除的数据ID
     * @return 结果
     */
    @Override
    public JsonResult remove(String ids)
    {
        Map<String,Object> delete = new HashMap<>();
        //数据库删除字段必须为delFlag
        delete.put("delFlag",1);
        delete.put("ids",Convert.toStrArray(ids));

        int result = ${classname}Dao.update${className}ByIds(delete);
        if (result == 0) {
            return JsonResult.error(201,"删除失败");
        }
        return JsonResult.success(200,"删除成功");
    }

}
